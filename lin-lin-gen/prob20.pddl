(define (problem run-generator2)
(:domain generator)
(:objects generator - gen tank1 tank2 tank3 tank4 tank5 tank6 tank7 tank8 tank9 tank10
			  tank11 tank12 tank13 tank14 tank15 tank16 tank17 tank18 tank19 tank20 - tank)
;(:objects generator - gen tank1 - tank )
(:init
(= ( gen_fuel_level generator) 800)
(= ( capacity generator) 800.01)
(= (last-used generator) 0)
(= ( tank_fuel_level tank1 ) 10)
(= (tanknum tank1) 1)
(= ( tank_fuel_level tank2 ) 10)
(= (tanknum tank2) 2)
(= ( tank_fuel_level tank3 ) 10)
(= (tanknum tank3) 3)
(= ( tank_fuel_level tank4 ) 10)
(= (tanknum tank4) 4)
(= ( tank_fuel_level tank5 ) 10)
(= (tanknum tank5) 5)
(= ( tank_fuel_level tank6 ) 10)
(= (tanknum tank6) 6)
(= ( tank_fuel_level tank7 ) 10)
(= (tanknum tank7) 7)
(= ( tank_fuel_level tank8 ) 10)
(= (tanknum tank8) 8)
(= ( tank_fuel_level tank9 ) 10)
(= (tanknum tank9) 9)
(= ( tank_fuel_level tank10 ) 10)
(= (tanknum tank10) 10)
(= ( tank_fuel_level tank11 ) 10)
(= (tanknum tank11) 11)
(= ( tank_fuel_level tank12 ) 10)
(= (tanknum tank12) 12)
(= ( tank_fuel_level tank13 ) 10)
(= (tanknum tank13) 13)
(= ( tank_fuel_level tank14 ) 10)
(= (tanknum tank14) 14)
(= ( tank_fuel_level tank15 ) 10)
(= (tanknum tank15) 15)
(= ( tank_fuel_level tank16 ) 10)
(= (tanknum tank16) 16)
(= ( tank_fuel_level tank17 ) 10)
(= (tanknum tank17) 17)
(= ( tank_fuel_level tank18 ) 10)
(= (tanknum tank18) 18)
(= ( tank_fuel_level tank19 ) 10)
(= (tanknum tank19) 19)
(= ( tank_fuel_level tank20 ) 10)
(= (tanknum tank20) 20)
)
(:goal (generator_ran generator))
;(:metric minimize ( total-time ))
)
